{"version":3,"file":"static/js/main.15d659be.js","mappings":"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","sources":["context/AuthContext.js","context/SettingsContext.js","context/ThemeContext.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/HomeScreen.js","context/LanguageContext.js","screens/LanguageScreen.js","screens/SettingsScreen.js","context/StatsContext.js","screens/StatisticsScreen.js","constants/letterData.js","utils/vowelUtils.js","utils/wordUtils.js","context/GameContext.js","components/TimerDisplay.js","components/HeaderBar.js","components/WordInputDisplay.js","components/ActionButtons.js","components/LetterGrid.js","components/SubmitButton.js","constants/multipliers.js","screens/GameScreen.js","screens/GameOverScreen.js","navigation/AppNavigator.js","App.js","public/wordlists|sync|/^/.//.*/.txt$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// context/AuthContext.js\r\nimport React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  // Load all users on startup\r\n  useEffect(() => {\r\n    loadUsers();\r\n    checkLoginStatus();\r\n  }, []);\r\n\r\n  const loadUsers = async () => {\r\n    try {\r\n      const storedUsers = await AsyncStorage.getItem('users');\r\n      if (storedUsers) {\r\n        setUsers(JSON.parse(storedUsers));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading users:', error);\r\n    }\r\n  };\r\n\r\n  const saveUsers = async (updatedUsers) => {\r\n    try {\r\n      await AsyncStorage.setItem('users', JSON.stringify(updatedUsers));\r\n      setUsers(updatedUsers);\r\n    } catch (error) {\r\n      console.error('Error saving users:', error);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Find user with matching email\r\n      const user = users.find(u => u.email === email);\r\n      \r\n      if (!user) {\r\n        throw new Error('No account found with this email');\r\n      }\r\n      \r\n      // Check password\r\n      if (user.password !== password) {\r\n        throw new Error('Invalid password');\r\n      }\r\n      \r\n      // Create user session without password\r\n      const userSession = { \r\n        id: user.id,\r\n        username: user.username, \r\n        email: user.email,\r\n        createdAt: user.createdAt\r\n      };\r\n      \r\n      setUser(userSession);\r\n      await AsyncStorage.setItem('currentUser', JSON.stringify(userSession));\r\n      \r\n      return userSession;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    setUser(null);\r\n    await AsyncStorage.removeItem('currentUser');\r\n  };\r\n\r\n  const createAccount = async (username, email, password) => {\r\n    try {\r\n      // Validate input\r\n      if (!username || !email || !password) {\r\n        throw new Error('All fields are required');\r\n      }\r\n      \r\n      // Check if email already exists\r\n      if (users.some(u => u.email === email)) {\r\n        throw new Error('An account with this email already exists');\r\n      }\r\n      \r\n      // Check if username already exists\r\n      if (users.some(u => u.username === username)) {\r\n        throw new Error('This username is already taken');\r\n      }\r\n      \r\n      // Create new user\r\n      const newUser = {\r\n        id: Date.now().toString(),\r\n        username,\r\n        email,\r\n        password,\r\n        createdAt: new Date().toISOString()\r\n      };\r\n      \r\n      // Add to users array\r\n      const updatedUsers = [...users, newUser];\r\n      await saveUsers(updatedUsers);\r\n      \r\n      // Log in the new user\r\n      const userSession = { \r\n        id: newUser.id,\r\n        username: newUser.username, \r\n        email: newUser.email,\r\n        createdAt: newUser.createdAt\r\n      };\r\n      \r\n      setUser(userSession);\r\n      await AsyncStorage.setItem('currentUser', JSON.stringify(userSession));\r\n      \r\n      return userSession;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const checkLoginStatus = async () => {\r\n    try {\r\n      const storedUser = await AsyncStorage.getItem('currentUser');\r\n      if (storedUser) {\r\n        setUser(JSON.parse(storedUser));\r\n      }\r\n    } catch (e) {\r\n      console.error('Error loading user:', e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUserProfile = async (userId, updates) => {\r\n    try {\r\n      // Find user index\r\n      const userIndex = users.findIndex(u => u.id === userId);\r\n      if (userIndex === -1) {\r\n        throw new Error('User not found');\r\n      }\r\n      \r\n      // Create updated user object\r\n      const updatedUser = {\r\n        ...users[userIndex],\r\n        ...updates\r\n      };\r\n      \r\n      // Update users array\r\n      const updatedUsers = [...users];\r\n      updatedUsers[userIndex] = updatedUser;\r\n      await saveUsers(updatedUsers);\r\n      \r\n      // Update current user if it's the same user\r\n      if (user && user.id === userId) {\r\n        const userSession = { \r\n          id: updatedUser.id,\r\n          username: updatedUser.username, \r\n          email: updatedUser.email,\r\n          createdAt: updatedUser.createdAt\r\n        };\r\n        \r\n        setUser(userSession);\r\n        await AsyncStorage.setItem('currentUser', JSON.stringify(userSession));\r\n      }\r\n      \r\n      return updatedUser;\r\n    } catch (error) {\r\n      console.error('Error updating user profile:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      user, \r\n      setUser, \r\n      loading, \r\n      login, \r\n      logout, \r\n      createAccount,\r\n      updateUserProfile,\r\n      users\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useEffect, useState, useContext } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst SettingsContext = createContext();\n\nexport const useSettings = () => {\n  const context = useContext(SettingsContext);\n  if (!context) {\n    throw new Error('useSettings must be used within a SettingsProvider');\n  }\n  return context;\n};\n\nexport const SettingsProvider = ({ children }) => {\n  const [soundOn, setSoundOn] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  const [showHints, setShowHints] = useState(true);\n  const [fullScreen, setFullScreen] = useState(false);\n\n  useEffect(() => {\n    loadSettings();\n  }, []);\n\n  const loadSettings = async () => {\n    try {\n      const settings = await AsyncStorage.getItem('userSettings');\n      if (settings) {\n        const parsedSettings = JSON.parse(settings);\n        setSoundOn(parsedSettings.soundOn ?? true);\n        setDarkMode(parsedSettings.darkMode ?? false);\n        setShowHints(parsedSettings.showHints ?? true);\n        setFullScreen(parsedSettings.fullScreen ?? false);\n      }\n    } catch (error) {\n      console.error('Error loading settings:', error);\n    }\n  };\n\n  const saveSettings = async (newSettings) => {\n    try {\n      await AsyncStorage.setItem('userSettings', JSON.stringify(newSettings));\n    } catch (error) {\n      console.error('Error saving settings:', error);\n    }\n  };\n\n  const updateSound = (value) => {\n    setSoundOn(value);\n    saveSettings({ soundOn: value, darkMode, showHints, fullScreen });\n  };\n\n  const updateDarkMode = (value) => {\n    setDarkMode(value);\n    saveSettings({ soundOn, darkMode: value, showHints, fullScreen });\n  };\n\n  const updateHints = (value) => {\n    setShowHints(value);\n    saveSettings({ soundOn, darkMode, showHints: value, fullScreen });\n  };\n\n  const updateFullScreen = (value) => {\n    setFullScreen(value);\n    saveSettings({ soundOn, darkMode, showHints, fullScreen: value });\n    \n    // Toggle full screen mode\n    if (value) {\n      document.documentElement.requestFullscreen().catch(err => {\n        console.error(`Error attempting to enable fullscreen: ${err.message}`);\n      });\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n    }\n  };\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        soundOn,\n        darkMode,\n        showHints,\n        fullScreen,\n        updateSound,\n        updateDarkMode,\n        updateHints,\n        updateFullScreen\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n};\n","import React, { createContext, useContext } from 'react';\nimport { useSettings } from './SettingsContext';\n\nexport const ThemeContext = createContext();\n\nconst lightTheme = {\n  background: '#fff',\n  text: '#000',\n  card: '#eee',\n  border: '#ccc',\n  highlight: '#167B82',\n  primary: '#007AFF',\n  secondary: '#5856D6',\n  error: '#ff0000',\n  inputBackground: '#f5f5f5',\n  placeholder: '#999',\n};\n\nconst darkTheme = {\n  background: '#000',\n  text: '#fff',\n  card: '#222',\n  border: '#444',\n  highlight: '#00FFFF',\n  primary: '#0A84FF',\n  secondary: '#5E5CE6',\n  error: '#ff453a',\n  inputBackground: '#1c1c1e',\n  placeholder: '#666',\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const { darkMode } = useSettings();\n  const theme = darkMode ? darkTheme : lightTheme;\n\n  return (\n    <ThemeContext.Provider value={{ theme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context.theme;\n};\n","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Button,\n  StyleSheet,\n  Alert,\n  KeyboardAvoidingView,\n  Platform,\n  TouchableOpacity,\n  ActivityIndicator,\n} from 'react-native';\nimport { useAuth } from '../context/AuthContext';\nimport { useTheme } from '../context/ThemeContext';\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  \n  const { login } = useAuth();\n  const theme = useTheme();\n\n  const validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const handleLogin = async () => {\n    try {\n      setError('');\n      setLoading(true);\n\n      // Validate inputs\n      if (!email || !password) {\n        throw new Error('Please fill in all fields');\n      }\n\n      if (!validateEmail(email)) {\n        throw new Error('Please enter a valid email address');\n      }\n\n      // Attempt login\n      await login(email, password);\n      \n      // Clear form\n      setEmail('');\n      setPassword('');\n      \n      // Navigate to home screen\n      navigation.replace('Home');\n      \n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGuestPlay = () => {\n    navigation.navigate('Game');\n  };\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      style={[styles.container, { backgroundColor: theme.background }]}\n    >\n      <View style={styles.logoContainer}>\n        <Text style={[styles.logo, { color: theme.primary }]}>Anda Words</Text>\n        <Text style={[styles.tagline, { color: theme.text }]}>Test your vocabulary skills!</Text>\n      </View>\n      \n      <View style={styles.formContainer}>\n        {error ? <Text style={[styles.errorText, { color: theme.error }]}>{error}</Text> : null}\n        \n        <TextInput\n          style={[styles.input, { \n            backgroundColor: theme.inputBackground, \n            color: theme.text,\n            borderColor: theme.border\n          }]}\n          placeholder=\"Email\"\n          placeholderTextColor={theme.placeholder}\n          value={email}\n          onChangeText={setEmail}\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          editable={!loading}\n        />\n        \n        <TextInput\n          style={[styles.input, { \n            backgroundColor: theme.inputBackground, \n            color: theme.text,\n            borderColor: theme.border\n          }]}\n          placeholder=\"Password\"\n          placeholderTextColor={theme.placeholder}\n          value={password}\n          onChangeText={setPassword}\n          secureTextEntry\n          editable={!loading}\n        />\n        \n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: theme.primary }]}\n          onPress={handleLogin}\n          disabled={loading}\n        >\n          {loading ? (\n            <ActivityIndicator color=\"#fff\" />\n          ) : (\n            <Text style={styles.buttonText}>Sign In</Text>\n          )}\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: theme.secondary }]}\n          onPress={handleGuestPlay}\n          disabled={loading}\n        >\n          <Text style={styles.buttonText}>Play as Guest</Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: theme.card }]}\n          onPress={() => navigation.navigate('Settings')}\n          disabled={loading}\n        >\n          <Text style={[styles.buttonText, { color: theme.text }]}>Settings</Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n          style={styles.linkButton}\n          onPress={() => navigation.navigate('Register')}\n          disabled={loading}\n        >\n          <Text style={[styles.linkText, { color: theme.primary }]}>\n            Don't have an account? Sign up\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 40,\n  },\n  logo: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  tagline: {\n    fontSize: 16,\n    textAlign: 'center',\n  },\n  formContainer: {\n    width: '100%',\n  },\n  input: {\n    height: 50,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    fontSize: 16,\n  },\n  button: {\n    height: 50,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  linkButton: {\n    marginTop: 10,\n    alignItems: 'center',\n  },\n  linkText: {\n    fontSize: 14,\n  },\n  errorText: {\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n});\n\nexport default LoginScreen;\n","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  ActivityIndicator,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport { useAuth } from '../context/AuthContext';\nimport { useTheme } from '../context/ThemeContext';\n\nconst RegisterScreen = ({ navigation }) => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  \n  const { createAccount } = useAuth();\n  const theme = useTheme();\n\n  const validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const validatePassword = (password) => {\n    return password.length >= 6;\n  };\n\n  const handleRegister = async () => {\n    try {\n      setError('');\n      setLoading(true);\n\n      // Validate inputs\n      if (!username || !email || !password || !confirmPassword) {\n        throw new Error('Please fill in all fields');\n      }\n\n      if (!validateEmail(email)) {\n        throw new Error('Please enter a valid email address');\n      }\n\n      if (!validatePassword(password)) {\n        throw new Error('Password must be at least 6 characters long');\n      }\n\n      if (password !== confirmPassword) {\n        throw new Error('Passwords do not match');\n      }\n\n      // Create account\n      await createAccount(username, email, password);\n      \n      // Clear form\n      setUsername('');\n      setEmail('');\n      setPassword('');\n      setConfirmPassword('');\n      \n      // Navigate to home screen\n      navigation.replace('Home');\n      \n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView \n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      style={[styles.container, { backgroundColor: theme.background }]}\n    >\n      <View style={styles.logoContainer}>\n        <Text style={[styles.logo, { color: theme.primary }]}>Anda Words</Text>\n        <Text style={[styles.tagline, { color: theme.text }]}>Join the word game community!</Text>\n      </View>\n      \n      <View style={styles.formContainer}>\n        {error ? (\n          <Text style={[styles.errorText, { color: theme.error }]}>\n            {error}\n          </Text>\n        ) : null}\n        \n        <TextInput\n          style={[styles.input, { \n            backgroundColor: theme.inputBackground,\n            color: theme.text,\n            borderColor: theme.border\n          }]}\n          placeholder=\"Username\"\n          placeholderTextColor={theme.placeholder}\n          value={username}\n          onChangeText={setUsername}\n          autoCapitalize=\"none\"\n          editable={!loading}\n        />\n        \n        <TextInput\n          style={[styles.input, { \n            backgroundColor: theme.inputBackground,\n            color: theme.text,\n            borderColor: theme.border\n          }]}\n          placeholder=\"Email\"\n          placeholderTextColor={theme.placeholder}\n          value={email}\n          onChangeText={setEmail}\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          editable={!loading}\n        />\n        \n        <TextInput\n          style={[styles.input, { \n            backgroundColor: theme.inputBackground,\n            color: theme.text,\n            borderColor: theme.border\n          }]}\n          placeholder=\"Password\"\n          placeholderTextColor={theme.placeholder}\n          value={password}\n          onChangeText={setPassword}\n          secureTextEntry\n          editable={!loading}\n        />\n        \n        <TextInput\n          style={[styles.input, { \n            backgroundColor: theme.inputBackground,\n            color: theme.text,\n            borderColor: theme.border\n          }]}\n          placeholder=\"Confirm Password\"\n          placeholderTextColor={theme.placeholder}\n          value={confirmPassword}\n          onChangeText={setConfirmPassword}\n          secureTextEntry\n          editable={!loading}\n        />\n        \n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: theme.primary }]}\n          onPress={handleRegister}\n          disabled={loading}\n        >\n          {loading ? (\n            <ActivityIndicator color=\"#fff\" />\n          ) : (\n            <Text style={styles.buttonText}>Register</Text>\n          )}\n        </TouchableOpacity>\n        \n        <View style={styles.loginContainer}>\n          <Text style={[styles.loginText, { color: theme.text }]}>\n            Already have an account?\n          </Text>\n          <TouchableOpacity\n            style={styles.loginLink}\n            onPress={() => navigation.navigate('Login')}\n            disabled={loading}\n          >\n            <Text style={[styles.loginLinkText, { color: theme.highlight }]}>\n              Log In\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 40,\n  },\n  logo: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  tagline: {\n    fontSize: 16,\n    textAlign: 'center',\n  },\n  formContainer: {\n    width: '100%',\n  },\n  input: {\n    height: 50,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    fontSize: 16,\n  },\n  button: {\n    height: 50,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 15,\n  },\n  loginText: {\n    fontSize: 14,\n  },\n  loginLink: {\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  loginLinkText: {\n    fontSize: 14,\n  },\n  errorText: {\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n});\n\nexport default RegisterScreen;\n","import React, { useContext } from 'react';\nimport { \n  View, \n  Text, \n  TouchableOpacity, \n  StyleSheet, \n  SafeAreaView,\n  StatusBar\n} from 'react-native';\nimport { useAuth } from '../context/AuthContext';\nimport { useTheme } from '../context/ThemeContext';\n\nconst HomeScreen = ({ navigation }) => {\n  const { user, logout } = useAuth();\n  const theme = useTheme();\n\n  const handleLogout = async () => {\n    await logout();\n    navigation.replace('Login');\n  };\n\n  return (\n    <SafeAreaView style={[styles.container, { backgroundColor: theme.background }]}>\n      <StatusBar barStyle={theme.text === '#fff' ? 'light-content' : 'dark-content'} />\n      <View style={styles.content}>\n        <View style={styles.header}>\n          <Text style={[styles.gameTitle, { color: theme.primary }]}>Anda Words</Text>\n        </View>\n        \n        <Text style={[styles.welcomeText, { color: theme.text }]}>\n          Welcome, {user?.username || 'Player'}!\n        </Text>\n        \n        <View style={styles.menuContainer}>\n          <TouchableOpacity\n            style={[styles.menuButton, { backgroundColor: theme.primary }]}\n            onPress={() => navigation.navigate('Game')}\n          >\n            <Text style={styles.buttonText}>Play Game</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.menuButton, { backgroundColor: theme.secondary }]}\n            onPress={() => navigation.navigate('Statistics')}\n          >\n            <Text style={styles.buttonText}>View Statistics</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.menuButton, { backgroundColor: theme.card }]}\n            onPress={() => navigation.navigate('Settings')}\n          >\n            <Text style={[styles.buttonText, { color: theme.text }]}>Settings</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.menuButton, { backgroundColor: theme.error }]}\n            onPress={handleLogout}\n          >\n            <Text style={styles.buttonText}>Log Out</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n    padding: 20,\n    alignItems: 'center',\n  },\n  header: {\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  gameTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  welcomeText: {\n    fontSize: 20,\n    marginBottom: 30,\n  },\n  menuContainer: {\n    width: '100%',\n    maxWidth: 300,\n  },\n  menuButton: {\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default HomeScreen; ","// context/LanguageContext.js\r\nimport React, { createContext, useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport const LanguageContext = createContext();\r\n\r\nexport const SUPPORTED_LANGUAGES = ['English', 'French', 'Spanish', 'German', 'Persian', 'Turkish'];\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState('English');\r\n\r\n  useEffect(() => {\r\n    const loadLanguage = async () => {\r\n      try {\r\n        const storedLanguage = await AsyncStorage.getItem('language');\r\n        if (storedLanguage && SUPPORTED_LANGUAGES.includes(storedLanguage)) {\r\n          setLanguage(storedLanguage);\r\n        }\r\n      } catch (e) {\r\n        console.error('Error loading language:', e);\r\n      }\r\n    };\r\n\r\n    loadLanguage();\r\n  }, []);\r\n\r\n  const changeLanguage = async (newLang) => {\r\n    if (SUPPORTED_LANGUAGES.includes(newLang)) {\r\n      setLanguage(newLang);\r\n      await AsyncStorage.setItem('language', newLang);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, changeLanguage, SUPPORTED_LANGUAGES }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, FlatList } from 'react-native';\r\nimport { LanguageContext } from '../context/LanguageContext';\r\n\r\nconst FLAG_MAP = {\r\n  English: '🇺🇸',\r\n  French: '🇫🇷',\r\n  Spanish: '🇪🇸',\r\n  German: '🇩🇪',\r\n  Persian: '🇮🇷',\r\n  Turkish: '🇹🇷',\r\n};\r\n\r\nconst LanguageScreen = ({ navigation }) => {\r\n  const { language, changeLanguage, SUPPORTED_LANGUAGES } = useContext(LanguageContext);\r\n\r\n  const handleSelect = async (lang) => {\r\n    await changeLanguage(lang);\r\n    navigation.goBack(); // Return to previous screen\r\n  };\r\n\r\n  const renderItem = ({ item }) => {\r\n    const selected = item === language;\r\n    return (\r\n      <TouchableOpacity\r\n        style={[styles.button, selected && styles.selectedButton]}\r\n        onPress={() => handleSelect(item)}\r\n      >\r\n        <Text style={[styles.buttonText, selected && styles.selectedText]}>\r\n          {FLAG_MAP[item]}  {item}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Select Language</Text>\r\n      <FlatList\r\n        data={SUPPORTED_LANGUAGES}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item}\r\n        contentContainerStyle={styles.list}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#000',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    color: '#fff',\r\n    marginBottom: 16,\r\n    textAlign: 'center',\r\n  },\r\n  list: {\r\n    gap: 12,\r\n  },\r\n  button: {\r\n    padding: 16,\r\n    borderRadius: 10,\r\n    backgroundColor: '#222',\r\n    borderWidth: 1,\r\n    borderColor: '#444',\r\n  },\r\n  selectedButton: {\r\n    backgroundColor: '#167B82',\r\n    borderColor: '#00FFFF',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n  },\r\n  selectedText: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default LanguageScreen;\r\n","import React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Switch,\n  Button,\n} from 'react-native';\nimport { useAuth } from '../context/AuthContext';\nimport { useSettings } from '../context/SettingsContext';\nimport { useTheme } from '../context/ThemeContext';\n\nconst SettingsScreen = ({ navigation }) => {\n  const { user, logout } = useAuth();\n  const {\n    soundOn,\n    darkMode,\n    showHints,\n    fullScreen,\n    updateSound,\n    updateDarkMode,\n    updateHints,\n    updateFullScreen\n  } = useSettings();\n  const theme = useTheme();\n\n  const handleLogout = async () => {\n    await logout();\n    navigation.replace('Login');\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.background }]}>\n      <Text style={[styles.title, { color: theme.text }]}>Settings</Text>\n\n      <View style={styles.settingRow}>\n        <Text style={[styles.label, { color: theme.text }]}>Sound</Text>\n        <Switch\n          value={soundOn}\n          onValueChange={updateSound}\n          thumbColor={soundOn ? theme.highlight : '#888'}\n        />\n      </View>\n\n      <View style={styles.settingRow}>\n        <Text style={[styles.label, { color: theme.text }]}>Dark Mode</Text>\n        <Switch\n          value={darkMode}\n          onValueChange={updateDarkMode}\n          thumbColor={darkMode ? theme.highlight : '#888'}\n        />\n      </View>\n\n      <View style={styles.settingRow}>\n        <Text style={[styles.label, { color: theme.text }]}>Hints</Text>\n        <Switch\n          value={showHints}\n          onValueChange={updateHints}\n          trackColor={{ false: '#767577', true: '#81b0ff' }}\n          thumbColor={showHints ? '#2196F3' : '#f4f3f4'}\n        />\n      </View>\n\n      <View style={styles.settingRow}>\n        <Text style={[styles.label, { color: theme.text }]}>Full Screen</Text>\n        <Switch\n          value={fullScreen}\n          onValueChange={updateFullScreen}\n          trackColor={{ false: '#767577', true: '#81b0ff' }}\n          thumbColor={fullScreen ? '#2196F3' : '#f4f3f4'}\n        />\n      </View>\n\n      <Text style={[styles.description, { color: theme.border }]}>\n        When enabled, hints will show the first and last letter of the longest possible word.\n      </Text>\n\n      <Text style={[styles.description, { color: theme.border }]}>\n        Full screen mode maximizes the game area on mobile browsers.\n      </Text>\n\n      <View style={styles.userInfo}>\n        <Text style={[styles.userLabel, { color: theme.border }]}>Username:</Text>\n        <Text style={[styles.userValue, { color: theme.text }]}>\n          {user?.username || 'Guest'}\n        </Text>\n        <Text style={[styles.userLabel, { color: theme.border }]}>Email:</Text>\n        <Text style={[styles.userValue, { color: theme.text }]}>\n          {user?.email || 'Not set'}\n        </Text>\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <Button title=\"Logout\" onPress={handleLogout} />\n        <Button title=\"Back to Menu\" onPress={() => navigation.goBack()} />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  settingRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n    paddingVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0,0,0,0.1)',\n  },\n  label: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n    marginBottom: 20,\n    fontStyle: 'italic',\n  },\n  userInfo: {\n    marginTop: 20,\n    marginBottom: 30,\n    padding: 15,\n    borderRadius: 8,\n    backgroundColor: 'rgba(0,0,0,0.05)',\n  },\n  userLabel: {\n    fontSize: 14,\n    marginBottom: 5,\n  },\n  userValue: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 15,\n  },\n  buttonContainer: {\n    marginTop: 20,\n    gap: 10,\n  },\n});\n\nexport default SettingsScreen;\n","// context/StatsContext.js\nimport React, { createContext, useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport dayjs from 'dayjs';\n\nexport const StatsContext = createContext();\n\nexport const StatsProvider = ({ children }) => {\n  const [stats, setStats] = useState({\n    highScore: 0,\n    longestTime: 0,\n    totalPoints: 0,\n    streak: 0,\n    gamesPlayed: 0,\n    lastPlayed: null,\n  });\n\n  useEffect(() => {\n    loadStats();\n  }, []);\n\n  const loadStats = async () => {\n    const stored = await AsyncStorage.getItem('userStats');\n    if (stored) {\n      setStats(JSON.parse(stored));\n    }\n  };\n\n  const saveStats = async (updatedStats) => {\n    setStats(updatedStats);\n    await AsyncStorage.setItem('userStats', JSON.stringify(updatedStats));\n  };\n\n  const updateStatsAfterGame = async ({ score, duration }) => {\n    const now = dayjs();\n    const last = stats.lastPlayed ? dayjs(stats.lastPlayed) : null;\n\n    const isNewDay = last ? !now.isSame(last, 'day') : true;\n    const isConsecutive = last ? now.diff(last, 'day') === 1 : true;\n\n    const newStreak = isNewDay\n      ? isConsecutive ? stats.streak + 1 : 1\n      : stats.streak;\n\n    const updated = {\n      highScore: Math.max(stats.highScore, score),\n      longestTime: Math.max(stats.longestTime, duration),\n      totalPoints: stats.totalPoints + score,\n      streak: newStreak,\n      gamesPlayed: stats.gamesPlayed + 1,\n      lastPlayed: now.toISOString(),\n    };\n\n    await saveStats(updated);\n  };\n\n  const resetStats = async () => {\n    const empty = {\n      highScore: 0,\n      longestTime: 0,\n      totalPoints: 0,\n      streak: 0,\n      gamesPlayed: 0,\n      lastPlayed: null,\n    };\n    await saveStats(empty);\n  };\n\n  return (\n    <StatsContext.Provider value={{ stats, updateStatsAfterGame, resetStats }}>\n      {children}\n    </StatsContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { View, Text, StyleSheet, Button } from 'react-native';\nimport { useAuth } from '../context/AuthContext';\nimport { StatsContext } from '../context/StatsContext';\nimport { useTheme } from '../context/ThemeContext';\n\nconst StatisticsScreen = ({ navigation }) => {\n  const { user } = useAuth();\n  const { stats } = useContext(StatsContext);\n  const theme = useTheme();\n\n  if (!user) {\n    return (\n      <View style={[styles.container, { backgroundColor: theme.background }]}>\n        <Text style={[styles.title, { color: theme.text }]}>Statistics</Text>\n        <Text style={[styles.message, { color: theme.text }]}>\n          You must be logged in to view statistics.\n        </Text>\n        <Button title=\"Back to Menu\" onPress={() => navigation.goBack()} />\n      </View>\n    );\n  }\n\n  const formattedTime = `${Math.floor(stats.longestTime / 60)}m ${stats.longestTime % 60}s`;\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.background }]}>\n      <Text style={[styles.title, { color: theme.text }]}>Your Statistics</Text>\n\n      <Stat label=\"High Score\" value={stats.highScore} theme={theme} />\n      <Stat label=\"Longest Time Played\" value={formattedTime} theme={theme} />\n      <Stat label=\"Total Points Earned\" value={stats.totalPoints} theme={theme} />\n      <Stat label=\"Daily Streak\" value={`${stats.streak} days`} theme={theme} />\n      <Stat label=\"Games Played\" value={stats.gamesPlayed} theme={theme} />\n\n      <View style={{ marginTop: 24 }}>\n        <Button title=\"Back to Menu\" onPress={() => navigation.goBack()} />\n      </View>\n    </View>\n  );\n};\n\nconst Stat = ({ label, value, theme }) => (\n  <View style={styles.statRow}>\n    <Text style={[styles.statLabel, { color: theme.border }]}>{label}</Text>\n    <Text style={[styles.statValue, { color: theme.text }]}>{value}</Text>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n  },\n  title: {\n    fontSize: 28,\n    marginBottom: 24,\n    textAlign: 'center',\n  },\n  message: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  statRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n    borderBottomWidth: 1,\n    paddingBottom: 6,\n  },\n  statLabel: {\n    fontSize: 16,\n  },\n  statValue: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default StatisticsScreen;\n","// constants/letterData.js\r\n\r\nexport const LETTER_DATA = {\r\n    English: {\r\n      'E': { frequency: 12, points: 1 },\r\n      'T': { frequency: 9, points: 1 },\r\n      'A': { frequency: 9, points: 1 },\r\n      'O': { frequency: 8, points: 1 },\r\n      'I': { frequency: 8, points: 1 },\r\n      'N': { frequency: 7, points: 2 },\r\n      'S': { frequency: 7, points: 2 },\r\n      'R': { frequency: 6, points: 2 },\r\n      'H': { frequency: 6, points: 2 },\r\n      'D': { frequency: 5, points: 2 },\r\n      'L': { frequency: 5, points: 2 },\r\n      'C': { frequency: 4, points: 3 },\r\n      'U': { frequency: 4, points: 3 },\r\n      'M': { frequency: 4, points: 3 },\r\n      'W': { frequency: 3, points: 4 },\r\n      'F': { frequency: 3, points: 4 },\r\n      'G': { frequency: 3, points: 4 },\r\n      'Y': { frequency: 3, points: 4 },\r\n      'P': { frequency: 3, points: 4 },\r\n      'B': { frequency: 2, points: 5 },\r\n      'V': { frequency: 2, points: 5 },\r\n      'K': { frequency: 1, points: 8 },\r\n      'J': { frequency: 1, points: 10 },\r\n      'X': { frequency: 1, points: 10 },\r\n      'Q': { frequency: 1, points: 10 },\r\n      'Z': { frequency: 1, points: 10 }\r\n    },\r\n  \r\n    French: {\r\n      // Scrabble-based frequencies and points for French (sample values)\r\n      'E': { frequency: 15, points: 1 },\r\n      'A': { frequency: 9, points: 1 },\r\n      'I': { frequency: 8, points: 1 },\r\n      'S': { frequency: 7, points: 1 },\r\n      'N': { frequency: 6, points: 1 },\r\n      'R': { frequency: 6, points: 1 },\r\n      'T': { frequency: 6, points: 1 },\r\n      'O': { frequency: 6, points: 1 },\r\n      'L': { frequency: 5, points: 1 },\r\n      'U': { frequency: 5, points: 1 },\r\n      'D': { frequency: 3, points: 2 },\r\n      'M': { frequency: 3, points: 2 },\r\n      'G': { frequency: 2, points: 2 },\r\n      'B': { frequency: 2, points: 3 },\r\n      'C': { frequency: 2, points: 3 },\r\n      'P': { frequency: 2, points: 3 },\r\n      'F': { frequency: 2, points: 4 },\r\n      'H': { frequency: 1, points: 4 },\r\n      'V': { frequency: 1, points: 4 },\r\n      'J': { frequency: 1, points: 8 },\r\n      'Q': { frequency: 1, points: 8 },\r\n      'K': { frequency: 1, points: 10 },\r\n      'W': { frequency: 1, points: 10 },\r\n      'X': { frequency: 1, points: 10 },\r\n      'Y': { frequency: 1, points: 10 },\r\n      'Z': { frequency: 1, points: 10 }\r\n    },\r\n  \r\n    Spanish: {\r\n        'A': { frequency: 12, points: 1 },\r\n        'E': { frequency: 12, points: 1 },\r\n        'O': { frequency: 9, points: 1 },\r\n        'S': { frequency: 6, points: 1 },\r\n        'N': { frequency: 5, points: 1 },\r\n        'R': { frequency: 5, points: 1 },\r\n        'I': { frequency: 6, points: 1 },\r\n        'L': { frequency: 4, points: 1 },\r\n        'U': { frequency: 5, points: 1 },\r\n        'T': { frequency: 4, points: 1 },\r\n        'D': { frequency: 5, points: 2 },\r\n        'C': { frequency: 4, points: 3 },\r\n        'M': { frequency: 3, points: 3 },\r\n        'B': { frequency: 2, points: 3 },\r\n        'P': { frequency: 2, points: 3 },\r\n        'G': { frequency: 2, points: 3 },\r\n        'Y': { frequency: 1, points: 4 },\r\n        'H': { frequency: 1, points: 4 },\r\n        'V': { frequency: 1, points: 4 },\r\n        'J': { frequency: 1, points: 8 },\r\n        'Ñ': { frequency: 1, points: 8 },\r\n        'X': { frequency: 1, points: 8 },\r\n        'Z': { frequency: 1, points: 10 }\r\n      },\r\n    \r\n      German: {\r\n        'E': { frequency: 15, points: 1 },\r\n        'N': { frequency: 9, points: 1 },\r\n        'I': { frequency: 8, points: 1 },\r\n        'S': { frequency: 7, points: 1 },\r\n        'R': { frequency: 6, points: 1 },\r\n        'A': { frequency: 6, points: 1 },\r\n        'T': { frequency: 6, points: 1 },\r\n        'D': { frequency: 4, points: 1 },\r\n        'H': { frequency: 4, points: 2 },\r\n        'U': { frequency: 6, points: 1 },\r\n        'L': { frequency: 3, points: 2 },\r\n        'C': { frequency: 2, points: 2 },\r\n        'G': { frequency: 3, points: 2 },\r\n        'M': { frequency: 4, points: 3 },\r\n        'B': { frequency: 2, points: 3 },\r\n        'W': { frequency: 1, points: 3 },\r\n        'F': { frequency: 2, points: 4 },\r\n        'K': { frequency: 2, points: 4 },\r\n        'Z': { frequency: 1, points: 3 },\r\n        'P': { frequency: 1, points: 4 },\r\n        'Ä': { frequency: 1, points: 6 },\r\n        'Ö': { frequency: 1, points: 8 },\r\n        'Ü': { frequency: 1, points: 6 },\r\n        'J': { frequency: 1, points: 6 },\r\n        'V': { frequency: 1, points: 6 },\r\n        'Y': { frequency: 1, points: 10 },\r\n        'X': { frequency: 1, points: 8 },\r\n        'Q': { frequency: 1, points: 10 }\r\n      },\r\n    \r\n      Persian: {\r\n        'ا': { frequency: 12, points: 1 },\r\n        'ر': { frequency: 9, points: 1 },\r\n        'ن': { frequency: 8, points: 1 },\r\n        'ی': { frequency: 8, points: 1 },\r\n        'د': { frequency: 7, points: 2 },\r\n        'ت': { frequency: 6, points: 2 },\r\n        'م': { frequency: 6, points: 2 },\r\n        'ب': { frequency: 5, points: 2 },\r\n        'ک': { frequency: 5, points: 3 },\r\n        'ل': { frequency: 4, points: 3 },\r\n        'س': { frequency: 4, points: 3 },\r\n        'ش': { frequency: 3, points: 4 },\r\n        'ز': { frequency: 3, points: 4 },\r\n        'گ': { frequency: 2, points: 5 },\r\n        'چ': { frequency: 2, points: 5 },\r\n        'ف': { frequency: 2, points: 5 },\r\n        'ق': { frequency: 1, points: 8 },\r\n        'ظ': { frequency: 1, points: 10 }\r\n      },\r\n    \r\n      Turkish: {\r\n        'A': { frequency: 12, points: 1 },\r\n        'E': { frequency: 8, points: 1 },\r\n        'İ': { frequency: 4, points: 1 },\r\n        'K': { frequency: 4, points: 1 },\r\n        'L': { frequency: 4, points: 1 },\r\n        'R': { frequency: 3, points: 1 },\r\n        'N': { frequency: 3, points: 1 },\r\n        'T': { frequency: 3, points: 1 },\r\n        'U': { frequency: 3, points: 1 },\r\n        'M': { frequency: 2, points: 2 },\r\n        'O': { frequency: 2, points: 2 },\r\n        'S': { frequency: 2, points: 2 },\r\n        'B': { frequency: 2, points: 3 },\r\n        'D': { frequency: 2, points: 3 },\r\n        'Y': { frequency: 2, points: 3 },\r\n        'C': { frequency: 2, points: 4 },\r\n        'H': { frequency: 1, points: 5 },\r\n        'P': { frequency: 1, points: 5 },\r\n        'Z': { frequency: 1, points: 5 },\r\n        'Ç': { frequency: 1, points: 4 },\r\n        'Ğ': { frequency: 1, points: 8 },\r\n        'Ş': { frequency: 1, points: 4 },\r\n        'V': { frequency: 1, points: 7 },\r\n        'F': { frequency: 1, points: 7 },\r\n        'J': { frequency: 1, points: 10 }\r\n      }\r\n    };","// utils/vowelUtils.js\r\n\r\nexport const VOWELS = {\r\n    English: ['A', 'E', 'I', 'O', 'U'],\r\n    French: ['A', 'E', 'I', 'O', 'U', 'Y'],\r\n    Spanish: ['A', 'E', 'I', 'O', 'U'],\r\n    German: ['A', 'E', 'I', 'O', 'U', 'Ä', 'Ö', 'Ü', 'Y'],\r\n    Turkish: ['A', 'E', 'İ', 'O', 'U', 'Ü', 'Ö'],\r\n    Persian: ['ا', 'و', 'ی'], // Alef, Vav, Ye\r\n  };\r\n  ","import { LETTER_DATA } from '../constants/letterData';\r\nimport { VOWELS } from './vowelUtils';\r\n\r\nlet cachedWordLists = {};\r\n\r\n// ✅ Load word list from public folder using fetch (works on web & native)\r\nexport const loadWordList = async (language) => {\r\n  if (cachedWordLists[language]) {\r\n    console.log(`✅ Using cached wordlist for ${language} (${cachedWordLists[language].size} words)`);\r\n    return cachedWordLists[language];\r\n  }\r\n\r\n  const key = language.toLowerCase();\r\n\r\n  try {\r\n    // For React Native, we need to use require\r\n    const wordListPath = require(`../public/wordlists/${key}.txt`);\r\n    \r\n    // Read the file content\r\n    const response = await fetch(wordListPath);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to load wordlist: ${response.status}`);\r\n    }\r\n    \r\n    const fileContent = await response.text();\r\n    const words = fileContent.split('\\n').map((w) => w.trim().toUpperCase());\r\n    const wordSet = new Set(words);\r\n    \r\n    console.log(`✅ Loaded ${wordSet.size} words for ${language}`);\r\n    console.log(`📝 Sample words:`, Array.from(wordSet).slice(0, 5));\r\n    \r\n    cachedWordLists[language] = wordSet;\r\n    return wordSet;\r\n  } catch (error) {\r\n    console.error(`❌ Failed to load wordlist for ${language}:`, error);\r\n    return new Set();\r\n  }\r\n};\r\n\r\n// ✅ Check if a letter is a vowel\r\nconst isVowel = (char) => ['A', 'E', 'I', 'O', 'U'].includes(char);\r\n\r\n// ✅ Generate a random letter grid with 2+ vowels and 2+ consonants\r\nexport const getRandomLetters = (count = 9, language = 'English', requireBalanced = true, remainingLetters = []) => {\r\n  const letterData = LETTER_DATA[language] || LETTER_DATA.English;\r\n  const vowelSet = new Set(VOWELS[language] || VOWELS.English);\r\n\r\n  // Count occurrences of each letter in remaining letters\r\n  const letterCounts = {};\r\n  remainingLetters.forEach(letter => {\r\n    letterCounts[letter] = (letterCounts[letter] || 0) + 1;\r\n  });\r\n\r\n  // Create a weighted selection function based on frequencies\r\n  const getWeightedRandomLetter = (isVowel = null) => {\r\n    // Filter letters based on vowel/consonant requirement and max count\r\n    const availableLetters = Object.entries(letterData).filter(([char]) => {\r\n      // Check if letter is already at max count (2)\r\n      if (letterCounts[char] >= 2) return false;\r\n      \r\n      // Check vowel/consonant requirement if specified\r\n      if (isVowel === null) return true;\r\n      return isVowel ? vowelSet.has(char) : !vowelSet.has(char);\r\n    });\r\n\r\n    // If no letters are available, return null\r\n    if (availableLetters.length === 0) return null;\r\n\r\n    // Calculate total weight of available letters\r\n    const totalWeight = availableLetters.reduce((sum, [_, { frequency }]) => sum + frequency, 0);\r\n\r\n    // Generate random value between 0 and total weight\r\n    let random = Math.random() * totalWeight;\r\n\r\n    // Select letter based on weight\r\n    for (const [char, { frequency }] of availableLetters) {\r\n      random -= frequency;\r\n      if (random <= 0) {\r\n        // Update letter count\r\n        letterCounts[char] = (letterCounts[char] || 0) + 1;\r\n        return char;\r\n      }\r\n    }\r\n\r\n    // Fallback to first available letter (should never happen)\r\n    const fallbackChar = availableLetters[0][0];\r\n    letterCounts[fallbackChar] = (letterCounts[fallbackChar] || 0) + 1;\r\n    return fallbackChar;\r\n  };\r\n\r\n  // Count vowels and consonants in remaining letters\r\n  const remainingVowels = remainingLetters.filter(l => vowelSet.has(l)).length;\r\n  const remainingConsonants = remainingLetters.filter(l => !vowelSet.has(l)).length;\r\n  \r\n  // Calculate how many vowels and consonants we need to add\r\n  const totalVowelsNeeded = Math.max(2, remainingVowels + 2);\r\n  const totalConsonantsNeeded = Math.max(2, remainingConsonants + 2);\r\n  \r\n  // Calculate how many vowels and consonants we need in the new letters\r\n  const newVowelsNeeded = Math.max(0, totalVowelsNeeded - remainingVowels);\r\n  const newConsonantsNeeded = Math.max(0, totalConsonantsNeeded - remainingConsonants);\r\n\r\n  const generate = () => {\r\n    const letters = [];\r\n    \r\n    // First, add required vowels if needed\r\n    while (letters.length < newVowelsNeeded && letters.length < count) {\r\n      const letter = getWeightedRandomLetter(true);\r\n      if (letter === null) break; // No more available vowels\r\n      letters.push(letter);\r\n    }\r\n    \r\n    // Then, add required consonants if needed\r\n    while (letters.length < (newVowelsNeeded + newConsonantsNeeded) && letters.length < count) {\r\n      const letter = getWeightedRandomLetter(false);\r\n      if (letter === null) break; // No more available consonants\r\n      letters.push(letter);\r\n    }\r\n    \r\n    // Fill the rest with random letters\r\n    while (letters.length < count) {\r\n      const letter = getWeightedRandomLetter();\r\n      if (letter === null) break; // No more available letters\r\n      letters.push(letter);\r\n    }\r\n    \r\n    return letters;\r\n  };\r\n\r\n  const isBalanced = (letters) => {\r\n    const vowels = letters.filter((l) => vowelSet.has(l));\r\n    const consonants = letters.filter((l) => !vowelSet.has(l));\r\n    \r\n    // Check if the total (new + remaining) has enough vowels and consonants\r\n    const totalVowels = vowels.length + remainingVowels;\r\n    const totalConsonants = consonants.length + remainingConsonants;\r\n    \r\n    return totalVowels >= 2 && totalConsonants >= 2;\r\n  };\r\n\r\n  // If balance isn't required (e.g. tradeIn < 4), skip checking\r\n  if (!requireBalanced || count < 4) {\r\n    return generate();\r\n  }\r\n\r\n  let attempt = 0;\r\n  while (attempt < 10) {\r\n    const result = generate();\r\n    if (isBalanced(result)) return result;\r\n    attempt++;\r\n  }\r\n\r\n  // Fallback after 10 tries - ensure at least some vowels and consonants\r\n  const fallbackResult = generate();\r\n  console.log(\"⚠️ Using fallback letter generation after 10 attempts\");\r\n  return fallbackResult;\r\n};\r\n\r\n\r\n// ✅ Check if a word is valid\r\nexport const isValidWord = (word, wordListSet) => {\r\n  return wordListSet.has(word.toUpperCase());\r\n};\r\n","// context/GameContext.js\nimport React, {\n  createContext,\n  useEffect,\n  useState,\n  useRef,\n  useContext,\n} from 'react';\nimport { getRandomLetters } from '../utils/wordUtils';\nimport { LanguageContext } from './LanguageContext';\n\nexport const GameContext = createContext();\n\nexport const GameProvider = ({ children }) => {\n  const { language } = useContext(LanguageContext);\n\n  const [score, setScore] = useState(0);\n  const [gameTime, setGameTime] = useState(60);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const [timerFrozen, setTimerFrozen] = useState(false);\n  const [freezeTimeLeft, setFreezeTimeLeft] = useState(0);\n  const [alertMessage, setAlertMessage] = useState('');\n\n  const [gridLetters, setGridLetters] = useState([]);\n  const [currentWord, setCurrentWord] = useState([]);\n  const [selectedIndices, setSelectedIndices] = useState([]);\n  const [gameStartTime, setGameStartTime] = useState(null);\n  const [gamePhase, setGamePhase] = useState(1);\n  const [successfulWords, setSuccessfulWords] = useState([]);\n\n  const timerRef = useRef(null);\n  const freezeRef = useRef(null);\n  const alertTimeoutRef = useRef(null);\n\n  // Debug timer state changes\n  useEffect(() => {\n    console.log('🔄 Timer state changed:', { \n      gameTime, \n      timerRunning, \n      timerFrozen, \n      freezeTimeLeft,\n      gameStartTime: gameStartTime ? new Date(gameStartTime).toISOString() : null\n    });\n  }, [gameTime, timerRunning, timerFrozen, freezeTimeLeft, gameStartTime]);\n\n  const updateGamePhase = (elapsedSeconds) => {\n    if (elapsedSeconds >= 360) return 3;\n    if (elapsedSeconds >= 180) return 2;\n    return 1;\n  };\n\n  const generateLetterGrid = () => getRandomLetters(9, language);\n\n  const startGame = () => {\n    if (!language) return;\n    clearInterval(timerRef.current);\n    clearInterval(freezeRef.current);\n    if (alertTimeoutRef.current) clearTimeout(alertTimeoutRef.current);\n    setScore(0);\n    setGameTime(60);\n    setCurrentWord([]);\n    setSelectedIndices([]);\n    setGridLetters(generateLetterGrid());\n    setTimerRunning(true);\n    setTimerFrozen(false);\n    setFreezeTimeLeft(0);\n    const startTime = Date.now();\n    setGameStartTime(startTime);\n    console.log('Game started at:', new Date(startTime).toISOString());\n    setGamePhase(1);\n    setAlertMessage('');\n    setSuccessfulWords([]);\n  };\n\n  const resetGame = () => {\n    clearInterval(timerRef.current);\n    clearInterval(freezeRef.current);\n    if (alertTimeoutRef.current) clearTimeout(alertTimeoutRef.current);\n    setScore(0);\n    setGameTime(60);\n    setTimerRunning(false);\n    setCurrentWord([]);\n    setSelectedIndices([]);\n    setGridLetters(generateLetterGrid());\n    if (gameStartTime) {\n      console.log('Game ended at:', new Date(Date.now()).toISOString());\n      console.log('Total game duration:', Math.floor((Date.now() - gameStartTime) / 1000), 'seconds');\n    }\n    setGamePhase(1);\n    setTimerFrozen(false);\n    setFreezeTimeLeft(0);\n    setAlertMessage('');\n    setSuccessfulWords([]);\n  };\n\n  const backspace = () => {\n    if (currentWord.length === 0 || selectedIndices.length === 0) return;\n    setCurrentWord((prev) => prev.slice(0, -1));\n    setSelectedIndices((prev) => prev.slice(0, -1));\n  };\n\n  const tradeIn = () => {\n    if (selectedIndices.length === 0) {\n      // Development feature: End game immediately when no letters are selected\n      setGameTime(0);\n      return;\n    }\n    \n    const newLetters = [...gridLetters];\n    // Get the remaining letters (not selected)\n    const remainingLetters = newLetters.filter((_, index) => !selectedIndices.includes(index));\n    const replacements = getRandomLetters(selectedIndices.length, language, true, remainingLetters);\n    selectedIndices.forEach((index, i) => {\n      newLetters[index] = replacements[i];\n    });\n    setGridLetters(newLetters);\n    setCurrentWord([]);\n    setSelectedIndices([]);\n    setScore((prev) => Math.max(prev - 5, 0)); // deduct 5 points, not below 0\n    setAlertMessage('Traded in letters! -5 points');\n    if (alertTimeoutRef.current) clearTimeout(alertTimeoutRef.current);\n    alertTimeoutRef.current = setTimeout(() => {\n      setAlertMessage('');\n    }, 3000);\n  };\n\n  const shuffleLetters = () => {\n    const shuffled = [...gridLetters];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    setGridLetters(shuffled);\n    setCurrentWord([]);\n    setSelectedIndices([]);\n    setAlertMessage('Letters shuffled!');\n    if (alertTimeoutRef.current) clearTimeout(alertTimeoutRef.current);\n    alertTimeoutRef.current = setTimeout(() => {\n      setAlertMessage('');\n    }, 3000);\n  };\n\n  // Function to set alert message with auto-clear\n  const setAlertWithTimeout = (message, duration = 3000) => {\n    if (alertTimeoutRef.current) clearTimeout(alertTimeoutRef.current);\n    setAlertMessage(message);\n    alertTimeoutRef.current = setTimeout(() => {\n      setAlertMessage('');\n    }, duration);\n  };\n\n  // Function to add a successful word\n  const addSuccessfulWord = (word, points) => {\n    setSuccessfulWords(prev => [...prev, { word, points }]);\n  };\n\n  // Function to get the game URL for sharing\n  const getGameUrl = () => {\n    //Actual game URL\n    return 'https://words.anda.it.com/';\n  };\n\n  // Completely revised freeze timer logic\n  const triggerFreeze = (duration) => {\n    if (duration <= 0) return;\n    \n    // Clear the main timer\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n    \n    // Set freeze state\n    setTimerFrozen(true);\n    setFreezeTimeLeft(duration);\n    \n    // Clear any existing freeze timer\n    if (freezeRef.current) {\n      clearInterval(freezeRef.current);\n      freezeRef.current = null;\n    }\n    \n    // Start the freeze countdown\n    freezeRef.current = setInterval(() => {\n      setFreezeTimeLeft((prev) => {\n        if (prev <= 1) {\n          // Freeze timer is done\n          clearInterval(freezeRef.current);\n          freezeRef.current = null;\n          setTimerFrozen(false);\n          \n          // Restart the main timer immediately\n          if (timerRunning) {\n            if (timerRef.current) {\n              clearInterval(timerRef.current);\n            }\n            \n            timerRef.current = setInterval(() => {\n              setGameTime((prev) => {\n                const next = prev - 1;\n                if (next <= 0) {\n                  clearInterval(timerRef.current);\n                  setTimerRunning(false);\n                  return 0;\n                }\n                return next;\n              });\n            }, 1000);\n          }\n          \n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n\n  // Main timer effect - simplified to only handle initial timer start\n  useEffect(() => {\n    if (timerRunning && !timerFrozen) {\n      // Clear any existing timer\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n      \n      // Start the main timer\n      timerRef.current = setInterval(() => {\n        setGameTime((prev) => {\n          const next = prev - 1;\n          if (next <= 0) {\n            clearInterval(timerRef.current);\n            setTimerRunning(false);\n            return 0;\n          }\n          return next;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n    };\n  }, [timerRunning, timerFrozen]);\n\n  useEffect(() => {\n    if (gameStartTime) {\n      const interval = setInterval(() => {\n        const elapsed = Math.floor((Date.now() - gameStartTime) / 1000);\n        setGamePhase(updateGamePhase(elapsed));\n      }, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [gameStartTime]);\n\n  return (\n    <GameContext.Provider\n      value={{\n        score,\n        setScore,\n        gameTime,\n        timerRunning,\n        timerFrozen,\n        freezeTimeLeft,\n        gridLetters,\n        setGridLetters,\n        currentWord,\n        setCurrentWord,\n        selectedIndices,\n        setSelectedIndices,\n        gamePhase,\n        setTimerRunning,\n        startGame,\n        resetGame,\n        backspace,\n        tradeIn,\n        shuffleLetters,\n        triggerFreeze,\n        setAlertWithTimeout,\n        addSuccessfulWord,\n        successfulWords,\n        getGameUrl,\n        alertMessage,\n        gameStartTime,\n      }}\n    >\n      {children}\n    </GameContext.Provider>\n  );\n};\n","import React, { useContext, useEffect } from 'react';\nimport { View, Text, StyleSheet, Dimensions } from 'react-native';\nimport { GameContext } from '../context/GameContext';\n\nconst TimerDisplay = () => {\n  const { gameTime, freezeTimeLeft, timerFrozen, timerRunning } = useContext(GameContext);\n\n  const formatTime = (seconds) => {\n    if (seconds === undefined || seconds === null) return '00:00';\n    const min = String(Math.floor(seconds / 60)).padStart(2, '0');\n    const sec = String(seconds % 60).padStart(2, '0');\n    return `${min}:${sec}`;\n  };\n\n  // Enhanced debugging\n  useEffect(() => {\n    console.log('⏱️ TimerDisplay render →', { \n      gameTime, \n      freezeTimeLeft, \n      timerFrozen,\n      timerRunning,\n      displayValue: timerFrozen ? gameTime : gameTime\n    });\n  }, [gameTime, freezeTimeLeft, timerFrozen, timerRunning]);\n\n  return (\n    <View style={styles.container}>\n      {timerFrozen && freezeTimeLeft > 0 && (\n        <Text style={styles.freeze}>Freeze: {formatTime(freezeTimeLeft)}</Text>\n      )}\n      <Text style={styles.timer}>\n        {formatTime(gameTime)}\n      </Text>\n    </View>\n  );\n};\n\nconst { width } = Dimensions.get('window');\nconst isSmallScreen = width < 360;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    padding: 5,\n    borderRadius: 5,\n    maxWidth: '100%',\n    marginRight: isSmallScreen ? 0 : 5,\n  },\n  timer: {\n    fontSize: isSmallScreen ? 16 : 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    textAlign: 'right',\n    marginLeft: 8,\n  },\n  freeze: {\n    fontSize: isSmallScreen ? 12 : 14,\n    color: '#00BFFF',\n    fontWeight: '500',\n  },\n});\n\nexport default TimerDisplay;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { GameContext } from '../context/GameContext';\nimport { useSettings } from '../context/SettingsContext';\nimport { LanguageContext } from '../context/LanguageContext';\nimport { useAuth } from '../context/AuthContext';\nimport { useTheme } from '../context/ThemeContext';\nimport { loadWordList } from '../utils/wordUtils';\nimport TimerDisplay from './TimerDisplay';\n\nconst HeaderBar = () => {\n  const { \n    score, \n    gridLetters, \n    gameTime, \n    timerRunning, \n    timerFrozen,\n    freezeTimeLeft,\n    alertMessage \n  } = useContext(GameContext);\n  const { showHints } = useSettings();\n  const { language } = useContext(LanguageContext);\n  const { user } = useAuth();\n  const theme = useTheme();\n\n  const [wordList, setWordList] = useState(new Set());\n  const [hint, setHint] = useState('');\n  const username = user?.username || 'Guest';\n\n  // Debug timer state in HeaderBar\n  useEffect(() => {\n    console.log('📊 HeaderBar timer state:', { \n      gameTime, \n      timerRunning, \n      timerFrozen,\n      freezeTimeLeft\n    });\n  }, [gameTime, timerRunning, timerFrozen, freezeTimeLeft]);\n\n  useEffect(() => {\n    const fetchList = async () => {\n      const words = await loadWordList(language);\n      setWordList(words);\n    };\n    fetchList();\n  }, [language]);\n\n  // Generate hint when grid letters change\n  useEffect(() => {\n    if (!showHints || gridLetters.length === 0 || wordList.size === 0) {\n      setHint('');\n      return;\n    }\n\n    const letters = gridLetters.join('');\n    let longest = '';\n\n    wordList.forEach(word => {\n      const upperWord = word.toUpperCase();\n      if (upperWord.length >= 3 && isWordInGrid(upperWord, letters)) {\n        if (upperWord.length > longest.length) {\n          longest = upperWord;\n        }\n      }\n    });\n\n    if (longest.length >= 3) {\n      const hintString = `${longest[0]}${'-'.repeat(longest.length - 2)}${longest[longest.length - 1]}`;\n      setHint(hintString);\n    } else {\n      setHint('');\n    }\n  }, [showHints, gridLetters, wordList]);\n\n  const isWordInGrid = (word, letters) => {\n    const tempLetters = [...letters];\n    for (let char of word) {\n      const index = tempLetters.indexOf(char);\n      if (index === -1) return false;\n      tempLetters.splice(index, 1);\n    }\n    return true;\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.card }]}>\n      <View style={styles.scoreContainer}>\n        <Text style={[styles.label, { color: theme.text }]}>Score:</Text>\n        <Text style={[styles.value, { color: theme.text }]}>{score}</Text>\n      </View>\n      \n      <View style={styles.alertContainer}>\n        {alertMessage ? (\n          <Text style={[styles.alertText, { color: theme.highlight }]}>{alertMessage}</Text>\n        ) : hint ? (\n          <Text style={[styles.hintText, { color: theme.text }]}>Hint: {hint}</Text>\n        ) : null}\n      </View>\n      \n      <View style={styles.timerContainer}>\n        <TimerDisplay />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 10,\n  },\n  scoreContainer: {\n    flex: 1,\n    alignItems: 'flex-start',\n  },\n  alertContainer: {\n    flex: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  timerContainer: {\n    flex: 1,\n    alignItems: 'flex-end',\n  },\n  label: {\n    fontSize: 12,\n    marginBottom: 2,\n  },\n  value: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  alertText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  hintText: {\n    fontSize: 14,\n    fontStyle: 'italic',\n    textAlign: 'center',\n  },\n});\n\nexport default HeaderBar;\n","import React, { useContext } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { GameContext } from '../context/GameContext';\nimport { useTheme } from '../context/ThemeContext';\n\nconst WordInputDisplay = () => {\n  const { currentWord } = useContext(GameContext);\n  const theme = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.card }]}>\n      <Text style={[styles.word, { color: theme.text }]}>\n        {currentWord.join('')}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 80,\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  word: {\n    fontSize: 28,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n});\n\nexport default WordInputDisplay;\n","import React from 'react';\nimport { View, Button, StyleSheet } from 'react-native';\n\nconst ActionButtons = ({ onBackspace, onTradeIn, onShuffle, currentWord }) => {\n  return (\n    <View style={styles.row}>\n      <Button title=\"BACKSPACE\" onPress={onBackspace} />\n      <Button \n        title={currentWord && currentWord.length > 0 ? \"TRADE IN\" : \"QUIT\"} \n        onPress={onTradeIn} \n      />\n      <Button title=\"SHUFFLE\" onPress={onShuffle} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginVertical: 10,\n  },\n});\n\nexport default ActionButtons;\n","import React, { useContext } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { GameContext } from '../context/GameContext';\nimport { useTheme } from '../context/ThemeContext';\n\n// ✅ Add Scrabble points reference\nconst SCRABBLE_POINTS = {\n  A: 1, B: 3, C: 3, D: 2, E: 1, F: 4, G: 2,\n  H: 4, I: 1, J: 8, K: 5, L: 1, M: 3, N: 1,\n  O: 1, P: 3, Q: 10, R: 1, S: 1, T: 1, U: 1,\n  V: 4, W: 4, X: 8, Y: 4, Z: 10,\n};\n\nconst LetterGrid = () => {\n  const {\n    gridLetters,\n    currentWord,\n    setCurrentWord,\n    selectedIndices,\n    setSelectedIndices,\n  } = useContext(GameContext);\n  const theme = useTheme();\n\n  const getRows = () => {\n    const rows = [];\n    for (let i = 0; i < gridLetters.length; i += 3) {\n      rows.push(gridLetters.slice(i, i + 3));\n    }\n    return rows;\n  };\n\n  const handleLetterPress = (letter, globalIndex) => {\n    if (selectedIndices.includes(globalIndex)) return;\n    setCurrentWord([...currentWord, letter]);\n    setSelectedIndices([...selectedIndices, globalIndex]);\n  };\n\n  return (\n    <View style={styles.grid}>\n      {getRows().map((row, rowIndex) => (\n        <View key={rowIndex} style={styles.row}>\n          {row.map((letter, colIndex) => {\n            const globalIndex = rowIndex * 3 + colIndex;\n            const isSelected = selectedIndices.includes(globalIndex);\n            const upperLetter = letter.toUpperCase();\n            const points = SCRABBLE_POINTS[upperLetter] || 1;\n\n            return (\n              <TouchableOpacity\n                key={globalIndex}\n                disabled={isSelected}\n                onPress={() => handleLetterPress(letter, globalIndex)}\n                style={[\n                  styles.tile,\n                  { backgroundColor: isSelected ? theme.background : theme.card },\n                ]}\n              >\n                <Text style={[styles.letter, { color: theme.text }]}>\n                  {isSelected ? '' : letter}\n                </Text>\n                <Text style={[styles.points, { color: theme.border }]}>\n                  {isSelected ? '' : points}\n                </Text>\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  grid: {\n    gap: 12,\n    marginBottom: 16,\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: 12,\n  },\n  tile: {\n    width: 80,\n    height: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 10,\n  },\n  letter: {\n    fontSize: 28,\n    fontWeight: 'bold',\n  },\n  points: {\n    fontSize: 12,\n  },\n});\n\nexport default LetterGrid;\n","import React from 'react';\nimport { TouchableOpacity, Text, StyleSheet } from 'react-native';\nimport { useTheme } from '../context/ThemeContext';\n\nconst SubmitButton = ({ onSubmit, disabled }) => {\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[\n        styles.button,\n        {\n          backgroundColor: disabled ? theme.border : theme.highlight,\n          opacity: disabled ? 0.6 : 1,\n        },\n      ]}\n      onPress={onSubmit}\n      disabled={disabled}\n    >\n      <Text style={[styles.text, { color: theme.text }]}>SUBMIT</Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    paddingVertical: 16,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginTop: 12,\n  },\n  text: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n\nexport default SubmitButton;\n","// constants/multipliers.js\r\nexport const WORD_MULTIPLIERS = {\r\n    3: 1.0,\r\n    4: 1.0,\r\n    5: 2.0,\r\n    6: 3.0,\r\n    7: 4.0,\r\n    8: 5.0,\r\n    9: 6.0\r\n  };\r\n  ","import React, { useContext, useEffect, useState } from 'react';\nimport { View, StyleSheet, Alert } from 'react-native';\nimport HeaderBar from '../components/HeaderBar';\nimport WordInputDisplay from '../components/WordInputDisplay';\nimport ActionButtons from '../components/ActionButtons';\nimport LetterGrid from '../components/LetterGrid';\nimport SubmitButton from '../components/SubmitButton';\nimport { GameContext } from '../context/GameContext';\nimport { LanguageContext } from '../context/LanguageContext';\nimport { loadWordList, isValidWord, getRandomLetters } from '../utils/wordUtils';\nimport { useNavigation } from '@react-navigation/native';\nimport { useTheme } from '../context/ThemeContext';\nimport { WORD_MULTIPLIERS } from '../constants/multipliers';\n\nconst SCRABBLE_POINTS = {\n  A: 1, B: 3, C: 3, D: 2, E: 1, F: 4, G: 2,\n  H: 4, I: 1, J: 8, K: 5, L: 1, M: 3, N: 1,\n  O: 1, P: 3, Q: 10, R: 1, S: 1, T: 1, U: 1,\n  V: 4, W: 4, X: 8, Y: 4, Z: 10,\n};\n\nconst calculateScore = (word) => {\n  const baseScore = word.toUpperCase().split('').reduce(\n    (acc, char) => acc + (SCRABBLE_POINTS[char] || 0),\n    0\n  );\n  const multiplier = WORD_MULTIPLIERS[word.length] || 1.0;\n  return Math.round(baseScore * multiplier);\n};\n\nconst getFreezeDuration = (length, phase) => {\n  if (phase === 1) {\n    if (length === 4) return 3;\n    if (length === 5) return 5;\n    if (length >= 6) return 7;\n  } else if (phase === 2) {\n    if (length === 4) return 1;\n    if (length === 5) return 3;\n    if (length >= 6) return 5;\n  } else if (phase === 3) {\n    if (length === 5) return 1;\n    if (length >= 6) return 3;\n  }\n  return 0;\n};\n\nconst GameScreen = () => {\n  const {\n    currentWord,\n    setCurrentWord,\n    score,\n    setScore,\n    gameTime,\n    selectedIndices,\n    setSelectedIndices,\n    setGridLetters,\n    startGame,\n    backspace,\n    tradeIn,\n    shuffleLetters,\n    gamePhase,\n    triggerFreeze,\n    setAlertWithTimeout,\n    addSuccessfulWord,\n  } = useContext(GameContext);\n\n  const { language } = useContext(LanguageContext);\n  const navigation = useNavigation();\n  const theme = useTheme();\n\n  const [wordList, setWordList] = useState(new Set());\n\n  useEffect(() => {\n    const fetchWords = async () => {\n      const list = await loadWordList(language);\n      console.log(`✅ Loaded ${list.size} words for ${language}`);\n      setWordList(list);\n    };\n    fetchWords();\n  }, [language]);\n\n  useEffect(() => {\n    startGame();\n  }, []);\n\n  useEffect(() => {\n    if (gameTime <= 0 && gameTime !== null) {\n      console.log('Game time reached zero, navigating to GameOver');\n      // Don't reset the game before navigating to GameOver\n      // This allows GameOver to calculate the total time correctly\n      navigation.navigate('GameOver');\n    }\n  }, [gameTime]);\n\n  const handleSubmit = () => {\n    const word = currentWord.join('');\n    if (word.length < 3) {\n      setAlertWithTimeout('Words must be at least 3 letters!');\n      return;\n    }\n\n    console.log(`🔍 Validating word: \"${word}\"`);\n    console.log(`📚 Word list size: ${wordList.size}`);\n    console.log(`🔍 Word in list: ${wordList.has(word.toUpperCase())}`);\n\n    if (isValidWord(word, wordList)) {\n      const earned = calculateScore(word);\n      setScore((prev) => prev + earned);\n      \n      // Add the word to successful words list\n      addSuccessfulWord(word, earned);\n      \n      // Show points earned message\n      setAlertWithTimeout(`\"${word}\" earned ${earned} points!`);\n      \n      const freezeSeconds = getFreezeDuration(word.length, gamePhase);\n      if (freezeSeconds > 0) {\n        // Trigger freeze immediately\n        triggerFreeze(freezeSeconds);\n        // Show freeze message after a short delay to not overlap with points message\n        setTimeout(() => {\n          setAlertWithTimeout(`+${freezeSeconds} second freeze!`);\n        }, 1000);\n      }\n\n      setGridLetters((prevLetters) => {\n        const newLetters = [...prevLetters];\n        // Get the remaining letters (not selected)\n        const remainingLetters = newLetters.filter((_, index) => !selectedIndices.includes(index));\n        const replacements = getRandomLetters(selectedIndices.length, language, true, remainingLetters);\n        selectedIndices.forEach((index, i) => {\n          newLetters[index] = replacements[i];\n        });\n        return newLetters;\n      });\n\n      setCurrentWord([]);\n      setSelectedIndices([]);\n    } else {\n      setAlertWithTimeout(`\"${word}\" is not a valid word!`);\n      setCurrentWord([]);\n      setSelectedIndices([]);\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.background }]}>\n      <HeaderBar />\n      <WordInputDisplay />\n      <ActionButtons\n        onBackspace={backspace}\n        onTradeIn={() => tradeIn(language, false)}\n        onShuffle={shuffleLetters}\n        currentWord={currentWord}\n      />\n      <LetterGrid />\n      <SubmitButton onSubmit={handleSubmit} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingVertical: 20,\n    paddingHorizontal: 12,\n    justifyContent: 'space-between',\n  },\n});\n\nexport default GameScreen;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { View, Text, Button, StyleSheet, Alert, TouchableOpacity, ScrollView, Share, Linking } from 'react-native';\nimport { GameContext } from '../context/GameContext';\nimport { StatsContext } from '../context/StatsContext';\nimport { useTheme } from '../context/ThemeContext';\nimport { AuthContext } from '../context/AuthContext';\n\nconst GameOverScreen = ({ navigation }) => {\n  const { score, gameStartTime, resetGame, startGame, successfulWords, getGameUrl } = useContext(GameContext);\n  const { updateStatsAfterGame } = useContext(StatsContext);\n  const theme = useTheme();\n  const { user } = useContext(AuthContext);\n\n  const [duration, setDuration] = useState(0);\n\n  useEffect(() => {\n    console.log('GameOverScreen mounted, gameStartTime:', gameStartTime);\n    \n    if (gameStartTime) {\n      // Calculate the elapsed time in seconds\n      const now = Date.now();\n      const elapsed = Math.floor((now - gameStartTime) / 1000);\n      \n      console.log('Calculated game duration:', elapsed, 'seconds');\n      \n      // Set the duration state\n      setDuration(elapsed);\n      \n      // Update stats with the correct duration\n      updateStatsAfterGame({ score, duration: elapsed });\n    } else {\n      console.warn('gameStartTime is null or undefined in GameOverScreen');\n    }\n  }, [gameStartTime, score]);\n\n  const getFormattedTime = () => {\n    if (duration <= 0) {\n      return \"00:00\";\n    }\n    const minutes = String(Math.floor(duration / 60)).padStart(2, '0');\n    const seconds = String(duration % 60).padStart(2, '0');\n    return `${minutes}:${seconds}`;\n  };\n\n  const handlePlayAgain = () => {\n    // Reset the game first\n    resetGame();\n    // Start a new game\n    startGame();\n    // Navigate to the Game screen\n    navigation.replace('Game');\n  };\n\n  const handleBackToMenu = () => {\n    // Reset the game first\n    resetGame();\n    // Navigate to the appropriate screen\n    if (user) {\n      navigation.replace('Home');\n    } else {\n      navigation.replace('Login');\n    }\n  };\n\n  const handleShare = async (platform) => {\n    try {\n      // Create a formatted message with score, words, and game URL\n      const gameUrl = getGameUrl();\n      const wordList = successfulWords.map(item => item.word).join(', ');\n      const totalWords = successfulWords.length;\n      \n      let message = `I scored ${score} points in Word Game! 🎮\\n\\n`;\n      message += `I found ${totalWords} words: ${wordList}\\n\\n`;\n      message += `Play the game here: ${gameUrl}`;\n      \n      // Use React Native's Share API\n      const result = await Share.share({\n        message,\n        title: 'My Word Game Score',\n      });\n      \n      if (result.action === Share.sharedAction) {\n        if (result.activityType) {\n          console.log(`Shared via ${result.activityType}`);\n        } else {\n          console.log('Shared successfully');\n        }\n      } else if (result.action === Share.dismissedAction) {\n        console.log('Share dismissed');\n      }\n    } catch (error) {\n      Alert.alert('Error', 'Failed to share score');\n      console.error(error);\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.background }]}>\n      <Text style={[styles.title, { color: theme.text }]}>Game Over</Text>\n      <Text style={[styles.score, { color: theme.text }]}>Final Score: {score}</Text>\n      <Text style={[styles.time, { color: theme.border }]}>Total Time: {getFormattedTime()}</Text>\n      \n      <View style={styles.wordsContainer}>\n        <Text style={[styles.wordsTitle, { color: theme.text }]}>Words Found ({successfulWords.length})</Text>\n        <ScrollView style={styles.wordsList}>\n          {successfulWords.length > 0 ? (\n            successfulWords.map((item, index) => (\n              <View key={index} style={styles.wordItem}>\n                <Text style={[styles.wordText, { color: theme.text }]}>{item.word}</Text>\n                <Text style={[styles.pointsText, { color: theme.highlight }]}>{item.points} pts</Text>\n              </View>\n            ))\n          ) : (\n            <Text style={[styles.noWords, { color: theme.border }]}>No words found</Text>\n          )}\n        </ScrollView>\n      </View>\n\n      <View style={styles.shareSection}>\n        <Text style={[styles.shareTitle, { color: theme.text }]}>Share My Score</Text>\n        <View style={styles.shareButtons}>\n          <TouchableOpacity \n            style={[styles.shareButton, { backgroundColor: theme.card }]} \n            onPress={() => handleShare('Facebook')}\n          >\n            <Text style={[styles.shareButtonText, { color: theme.highlight }]}>Share</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <Button title=\"Play Again\" onPress={handlePlayAgain} />\n        <Button title=\"Back to Menu\" onPress={handleBackToMenu} />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 36,\n    marginBottom: 20,\n  },\n  score: {\n    fontSize: 24,\n    marginBottom: 10,\n  },\n  time: {\n    fontSize: 20,\n    marginBottom: 30,\n  },\n  wordsContainer: {\n    width: '100%',\n    marginBottom: 20,\n    alignItems: 'center',\n  },\n  wordsTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  wordsList: {\n    width: '100%',\n    maxHeight: 200,\n  },\n  wordItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0,0,0,0.1)',\n  },\n  wordText: {\n    fontSize: 16,\n  },\n  pointsText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  noWords: {\n    fontSize: 16,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginTop: 10,\n  },\n  buttonContainer: {\n    gap: 12,\n    width: '100%',\n    paddingHorizontal: 20,\n    marginTop: 24,\n  },\n  shareSection: {\n    marginBottom: 20,\n    alignItems: 'center',\n  },\n  shareTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  shareButtons: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: 10,\n  },\n  shareButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n  },\n  shareButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default GameOverScreen;\n","// navigation/AppNavigator.js\nimport React, { useContext } from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from '../screens/LoginScreen';\nimport RegisterScreen from '../screens/RegisterScreen';\nimport HomeScreen from '../screens/HomeScreen';\nimport LanguageScreen from '../screens/LanguageScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport StatisticsScreen from '../screens/StatisticsScreen';\nimport GameScreen from '../screens/GameScreen';\nimport GameOverScreen from '../screens/GameOverScreen';\nimport { AuthContext } from '../context/AuthContext';\n\nconst Stack = createNativeStackNavigator();\n\nconst AppNavigator = () => {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false, // Can be set to true if you want top nav bars\n      }}\n    >\n      {user ? (\n        // Logged in user flow\n        <>\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Game\" component={GameScreen} />\n          <Stack.Screen name=\"GameOver\" component={GameOverScreen} />\n          <Stack.Screen name=\"Statistics\" component={StatisticsScreen} />\n          <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n          <Stack.Screen name=\"Language\" component={LanguageScreen} />\n        </>\n      ) : (\n        // Guest/Login flow\n        <>\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\n          <Stack.Screen name=\"Register\" component={RegisterScreen} />\n          <Stack.Screen name=\"Game\" component={GameScreen} />\n          <Stack.Screen name=\"GameOver\" component={GameOverScreen} />\n          <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n          <Stack.Screen name=\"Language\" component={LanguageScreen} />\n        </>\n      )}\n    </Stack.Navigator>\n  );\n};\n\nexport default AppNavigator;\n","// App.js\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppNavigator from './navigation/AppNavigator';\nimport { AuthProvider } from './context/AuthContext';\nimport { LanguageProvider } from './context/LanguageContext';\nimport { SettingsProvider } from './context/SettingsContext';\nimport { ThemeProvider } from './context/ThemeContext';\nimport { StatsProvider } from './context/StatsContext';\nimport { GameProvider } from './context/GameContext'; // ✅ Add this\n\nexport default function App() {\n  console.log('✅ App.js loaded');\n\n  return (\n    <AuthProvider>\n      <LanguageProvider>\n        <SettingsProvider>\n          <ThemeProvider>\n            <StatsProvider>\n              <GameProvider> {/* ✅ Wrap the navigator in GameProvider */}\n                <NavigationContainer>\n                  <AppNavigator />\n                </NavigationContainer>\n              </GameProvider>\n            </StatsProvider>\n          </ThemeProvider>\n        </SettingsProvider>\n      </LanguageProvider>\n    </AuthProvider>\n  );\n}\n","var map = {\n\t\"./english.txt\": 4787,\n\t\"./french.txt\": 6325,\n\t\"./german.txt\": 4803,\n\t\"./persian.txt\": 2923,\n\t\"./spanish.txt\": 8299,\n\t\"./turkish.txt\": 8547\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 9571;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [540], () => (__webpack_require__(4424)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["AuthContext","createContext","useAuth","context","useContext","Error","AuthProvider","children","user","setUser","useState","loading","setLoading","users","setUsers","useEffect","loadUsers","checkLoginStatus","async","storedUsers","AsyncStorage","getItem","JSON","parse","error","console","saveUsers","setItem","stringify","updatedUsers","storedUser","e","_jsx","Provider","value","login","email","password","find","u","userSession","id","username","createdAt","logout","removeItem","createAccount","some","newUser","Date","now","toString","toISOString","updateUserProfile","userId","updates","userIndex","findIndex","updatedUser","Object","assign","SettingsContext","useSettings","SettingsProvider","soundOn","setSoundOn","darkMode","setDarkMode","showHints","setShowHints","fullScreen","setFullScreen","loadSettings","settings","parsedSettings","saveSettings","newSettings","updateSound","updateDarkMode","updateHints","updateFullScreen","document","documentElement","requestFullscreen","catch","err","message","exitFullscreen","ThemeContext","lightTheme","background","text","card","border","highlight","primary","secondary","inputBackground","placeholder","darkTheme","ThemeProvider","theme","useTheme","styles","StyleSheet","create","container","flex","logoContainer","alignItems","marginBottom","logo","fontSize","fontWeight","tagline","textAlign","formContainer","width","input","height","borderWidth","borderRadius","paddingHorizontal","button","justifyContent","buttonText","color","linkButton","marginTop","linkText","errorText","LoginScreen","navigation","setEmail","setPassword","setError","_jsxs","KeyboardAvoidingView","behavior","style","backgroundColor","View","Text","TextInput","borderColor","placeholderTextColor","onChangeText","autoCapitalize","keyboardType","editable","secureTextEntry","TouchableOpacity","onPress","test","String","toLowerCase","validateEmail","replace","disabled","ActivityIndicator","handleGuestPlay","navigate","padding","loginContainer","flexDirection","loginText","loginLink","loginLinkText","RegisterScreen","setUsername","confirmPassword","setConfirmPassword","length","validatePassword","content","header","gameTitle","welcomeText","menuContainer","maxWidth","menuButton","HomeScreen","SafeAreaView","StatusBar","barStyle","LanguageContext","SUPPORTED_LANGUAGES","LanguageProvider","language","setLanguage","storedLanguage","includes","loadLanguage","changeLanguage","newLang","FLAG_MAP","English","French","Spanish","German","Persian","Turkish","title","list","gap","selectedButton","selectedText","LanguageScreen","FlatList","data","renderItem","item","selected","lang","goBack","handleSelect","keyExtractor","contentContainerStyle","settingRow","paddingVertical","borderBottomWidth","borderBottomColor","label","description","fontStyle","userInfo","userLabel","userValue","buttonContainer","SettingsScreen","Switch","onValueChange","thumbColor","trackColor","false","true","Button","StatsContext","StatsProvider","stats","setStats","highScore","longestTime","totalPoints","streak","gamesPlayed","lastPlayed","loadStats","stored","saveStats","updatedStats","updateStatsAfterGame","score","duration","dayjs","last","isNewDay","isSame","isConsecutive","diff","newStreak","updated","Math","max","resetStats","Stat","statRow","statLabel","statValue","paddingBottom","StatisticsScreen","formattedTime","floor","LETTER_DATA","frequency","points","VOWELS","cachedWordLists","loadWordList","log","size","key","wordListPath","require","response","fetch","ok","status","words","split","map","w","trim","toUpperCase","wordSet","Set","Array","from","slice","getRandomLetters","count","requireBalanced","remainingLetters","letterData","vowelSet","letterCounts","forEach","letter","getWeightedRandomLetter","isVowel","availableLetters","entries","filter","char","has","totalWeight","reduce","sum","_","random","fallbackChar","remainingVowels","l","remainingConsonants","totalVowelsNeeded","totalConsonantsNeeded","newVowelsNeeded","newConsonantsNeeded","generate","letters","push","isBalanced","vowels","consonants","totalVowels","totalConsonants","attempt","result","fallbackResult","GameContext","GameProvider","setScore","gameTime","setGameTime","timerRunning","setTimerRunning","timerFrozen","setTimerFrozen","freezeTimeLeft","setFreezeTimeLeft","alertMessage","setAlertMessage","gridLetters","setGridLetters","currentWord","setCurrentWord","selectedIndices","setSelectedIndices","gameStartTime","setGameStartTime","gamePhase","setGamePhase","successfulWords","setSuccessfulWords","timerRef","useRef","freezeRef","alertTimeoutRef","generateLetterGrid","current","clearInterval","setInterval","prev","next","interval","elapsed","elapsedSeconds","startGame","clearTimeout","startTime","resetGame","backspace","tradeIn","newLetters","index","replacements","i","setTimeout","shuffleLetters","shuffled","j","triggerFreeze","setAlertWithTimeout","addSuccessfulWord","word","getGameUrl","Dimensions","get","isSmallScreen","marginRight","timer","marginLeft","freeze","TimerDisplay","formatTime","seconds","undefined","padStart","displayValue","scoreContainer","alertContainer","timerContainer","alertText","hintText","HeaderBar","wordList","setWordList","hint","setHint","fetchList","join","longest","upperWord","isWordInGrid","hintString","repeat","tempLetters","indexOf","splice","WordInputDisplay","row","marginVertical","ActionButtons","onBackspace","onTradeIn","onShuffle","SCRABBLE_POINTS","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","grid","tile","LetterGrid","getRows","rows","rowIndex","colIndex","globalIndex","isSelected","upperLetter","handleLetterPress","SubmitButton","onSubmit","opacity","WORD_MULTIPLIERS","GameScreen","useNavigation","fetchWords","handleSubmit","isValidWord","wordListSet","earned","baseScore","acc","multiplier","round","calculateScore","freezeSeconds","getFreezeDuration","phase","prevLetters","time","wordsContainer","wordsTitle","wordsList","maxHeight","wordItem","wordText","pointsText","noWords","shareSection","shareTitle","shareButtons","shareButton","shareButtonText","GameOverScreen","setDuration","warn","getFormattedTime","ScrollView","gameUrl","totalWords","Share","share","action","sharedAction","activityType","dismissedAction","Alert","alert","handleShare","handlePlayAgain","handleBackToMenu","Stack","createNativeStackNavigator","AppNavigator","Navigator","screenOptions","headerShown","_Fragment","Screen","name","component","App","NavigationContainer","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","keys","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","r","n","getter","__esModule","d","a","definition","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}